name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build-psp:
    name: PSP Build
    runs-on: ubuntu-latest
    container: pspdev/pspdev:latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk add build-base git bash cmake
    
    - name: Compile project
      run: |
        ./build_daedalus.sh PSP

    - name: Get short SHA
      id: slug
      run: echo "{name}={sha8::$(echo ${GITHUB_S9A} | cut -c1-8)}" >> $GITHUB_OUTPUT

    - name: Prepare Artifacts
      run: |
        rm -rf DaedalusX64/daedalus.prx # Remove the PRX used for testing in public builds

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: DaedalusX64-PSP
        path: DaedalusX64

    - name: Extract tag name
      if: startsWith(github.ref, 'refs/tags/')
      id: tag
      run: echo "{name}={VERSION::${GITHUB_REF/refs\/tags\//}}" >> $GITHUB_OUTPUT


  build-linux:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt install build-essential git bash cmake libpng-dev libz-dev libminizip-dev libsdl2-dev libsdl2-ttf-dev libglew-dev
    
    - name: Compile project
      run: |
        ./build_daedalus.sh

    - name: Get short SHA
      id: slug
      run: echo "{name}={sha8::$(echo ${GITHUB_SHA} | cut -c1-8)}" >> $GITHUB_OUTPUT

    - name: Prepare artifacts
      run: |
        tar -zcvf daedalusX64-linux.tar.gz DaedalusX64


    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: DaedalusX64-Linux
        path: DaedalusX64

  build-ctr:
    runs-on: ubuntu-latest
    container: wally4000/daedalusx64:latest

    steps:
      - uses: actions/checkout@v4 

      - name: Compile project
        run: | 
          ./build_daedalus.sh CTR

      - name: Get short SHA
        id: slug
        run: echo "{name}={sha8::$(echo ${GITHUB_SHA} | cut -c1-8)}" >> $GITHUB_OUTPUT

      - name: Prepare artifacts
        run: |
          tar -zcvf daedalusX64-CTR.tar.gz DaedalusX64\

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: DaedalusX64-CTR
          path: DaedalusX64

  build-macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup Homebrew # This will install the correct homebrew for architecture selected
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - name: Install dependencies
      run: |
        brew install git bash cmake libpng minizip sdl2 sdl2_ttf glew
    
    - name: Compile project
      run: |
        ./build_daedalus.sh

    - name: Get short SHA
      id: slug
      run: echo "{name}={sha8::$(echo ${GITHUB_SHA} | cut -c1-8)}" >> $GITHUB_OUTPUT

    - name: Prepare artifacts
      run: |
          tar -zcvf daedalusX64-macos-x86.tar.gz DaedalusX64

    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v4
      with:
        name: DaedalusX64-macos
        path: DaedalusX64

  build-windows:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - uses: actions/checkout@v4

      - uses: lukka/get-cmake@latest

      - name: Setup a new (or from cache) vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: aa628ceb5f15f0c30d4d481f14fa5b2be2b4a658
          runVcpkgInstall: true

      - name: Run CMake config
        run: |
          cmake -S . -B build "-DCMAKE_TOOLCHAIN_FILE=vcpkg/scripts/buildsystems/vcpkg.cmake" "-DVCPKG_TARGET_TRIPLET=x64-windows"

      - name: Build
        run: |
          cmake --build build --config Release
          cmake --install build --prefix DaedalusX64

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: DaedalusX64-win
          path: daedalusX64-windows-amd64.tar.gz
