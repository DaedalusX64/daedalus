name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build-psp:
    name: PSP Build
    runs-on: ubuntu-latest
    container: pspdev/pspdev:latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        apk add build-base git bash cmake
    
    - name: Compile project
      run: |
        ./build_daedalus.sh PSP

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Prepare artifacts
      run: |
        tar -zcvf daedalusX64-PSP.tar.gz \
          DaedalusX64/Plugins \
          DaedalusX64/EBOOT.PBP \
          DaedalusX64/roms.ini \
          DaedalusX64/readme.txt \
          DaedalusX64/copying.txt \
          DaedalusX64/Resources \
          DaedalusX64/Languages \
          DaedalusX64/ControllerConfigs \


    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: DaedalusX64-PSP
        path: daedalusX64-PSP.tar.gz

    - name: Extract tag name
      if: startsWith(github.ref, 'refs/tags/')
      id: tag
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    # - name: Create pre-release
    #   if: github.ref == 'refs/heads/master'
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-PSP.tar.gz
    #     prerelease: true
    #     name: "Development build"
    #     tag_name: "latest"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Release
    #   if: startsWith(github.ref, 'refs/tags/')
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-PSP.tar.gz
    #     tag_name: ${{ steps.tag.outputs.VERSION }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #     name: CI

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt install build-essential git bash cmake libpng-dev libz-dev libminizip-dev libsdl2-dev libglew-dev
    
    - name: Compile project
      run: |
        ./build_daedalus.sh

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Prepare artifacts
      run: |
        tar -zcvf daedalusX64-linux.tar.gz \
          DaedalusX64/daedalus \
          DaedalusX64/n64.psh \
          DaedalusX64/roms.ini \
          DaedalusX64/readme.txt \
          DaedalusX64/copying.txt \
#          DaedalusX64/Resources \ # Not used in Posix Buiilds
#          DaedalusX64/Languages \ # Not used in Posix Builds
#           DaedalusX64/ControllerConfigs \ # Not used in Posix Builds


    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: daedalusX64-linux
        path: daedalusX64-linux.tar.gz

    # - name: Extract tag name
    #   if: startsWith(github.ref, 'refs/tags/')
    #   id: tag
    #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    # - name: Create pre-release
    #   if: github.ref == 'refs/heads/master'
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-linux.tar.gz
    #     prerelease: true
    #     name: "Development build"
    #     tag_name: "latest"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Release
    #   if: startsWith(github.ref, 'refs/tags/')
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-linux.tar.gz
    #     tag_name: ${{ steps.tag.outputs.VERSION }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-ctr:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm:latest
    steps:
      - uses: actions/checkout@v2 

      # Needed to build CIA files
      - name: build makerom
        run: |
            apt-get update && \
            apt-get -y install g++ libyaml-dev libmbedtls-dev
            git clone https://github.com/wally4000/Project_CTR --depth=1
            cd Project_CTR/
            make
            cp makerom/bin/makerom /usr/local/bin

      - name: Build PicaGL
        run: |
            git clone -b revamp https://github.com/masterfeizz/picaGL --depth=1
            cd picaGL
            DEVKITARM='/opt/devkitpro/devkitARM' make 
            DEVKITARM='/opt/devkitpro/devkitARM' make install

      - name: Build imgui-picagl
        run: |
            git clone https://github.com/masterfeizz/imgui-picagl --depth=1
            cd imgui-picagl
            DEVKITARM='/opt/devkitpro/devkitARM' make 
            DEVKITARM='/opt/devkitpro/devkitARM' make install

      - name: Compile project
        run: | 
          ./build_daedalus.sh CTR

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

      - name: Prepare artifacts
        run: |
          tar -zcvf daedalusX64-CTR.tar.gz DaedalusX64\

      - name: Upload artifacts
        if: ${{ success() }}
        uses: actions/upload-artifact@v2
        with:
          name: daedalusX64-CTR
          path: daedalusX64-CTR.tar.gz

  build-macos:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Homebrew # This will install the correct homebrew for architecture selected
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    - name: Install dependencies
      run: |
        brew install git bash cmake libpng minizip sdl2 glew
    
    - name: Compile project
      run: |
        ./build_daedalus.sh

    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Prepare artifacts
      run: |
          tar -zcvf daedalusX64-macos-x86.tar.gz \
          DaedalusX64/daedalus \
          DaedalusX64/n64.psh \
          DaedalusX64/roms.ini \
          DaedalusX64/readme.txt \
          DaedalusX64/copying.txt \
#          DaedalusX64/Resources \ # Not used in Posix Buiilds
#          DaedalusX64/Languages \ # Not used in Posix Builds
#           DaedalusX64/ControllerConfigs \ # Not used in Posix Builds


    - name: Upload artifacts
      if: ${{ success() }}
      uses: actions/upload-artifact@v2
      with:
        name: DaedalusX64-macos
        path: daedalusX64-macos-x86.tar.gz

    # - name: Extract tag name
    #   if: startsWith(github.ref, 'refs/tags/')
    #   id: tag
    #   run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    # - name: Create pre-release
    #   if: github.ref == 'refs/heads/master'
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-macos-x86.tar.gz
    #     prerelease: true
    #     name: "Development build"
    #     tag_name: "latest"
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Release
    #   if: startsWith(github.ref, 'refs/tags/')
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     files: daedalusX64-macos-x86.tar.gz
    #     tag_name: ${{ steps.tag.outputs.VERSION }}
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}